name: "Daily Build"
on:
  workflow_dispatch:
  schedule:
    - cron: '0 23 * * *'
jobs:
  kubernetes-build-jvm-latest:
    name: Kubernetes JVM
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - quarkus-version: "3.22.3"
            java: 17
            extra-maven-args: '-pl examples/greetings -Dit.test=KubernetesRemoteDevModeGreetingResourceIT'
          - quarkus-version: "999-SNAPSHOT"
            java: 21 # test 'quarkus-container-image-jib' with Java 21 as it should use 'openjdk-21-runtime' instead
            extra-maven-args: '-pl examples/pingpong/'
          - quarkus-version: "999-SNAPSHOT"
            java: 17 # test 'quarkus-container-image-jib' with images based on UBI8 and Java 17
            extra-maven-args: '-pl examples/pingpong/ -Dtest-ubi8-compatibility -Dquarkus.jib.base-jvm-image=registry.access.redhat.com/ubi8/openjdk-17-runtime:latest'
          - quarkus-version: "999-SNAPSHOT"
            java: 21 # test 'quarkus-container-image-jib' with images based on UBI8 and Java 21
            extra-maven-args: '-pl examples/pingpong/ -Dtest-ubi8-compatibility -Dquarkus.jib.base-jvm-image=registry.access.redhat.com/ubi8/openjdk-21-runtime:latest'
    steps:
      - uses: actions/checkout@v4
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: 'maven'
      - name: Set up Minikube-Kubernetes
        uses: manusa/actions-setup-minikube@v2.14.0
        with:
          minikube version: 'v1.35.0'
          kubernetes version: 'v1.32.5'
          github token: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.CI_REGISTRY_USERNAME }}
          password: ${{ secrets.CI_REGISTRY_PASSWORD }}
      - name: Build
        run: |
          mvn -B --no-transfer-progress -fae -s .github/quarkus-snapshots-mvn-settings.xml clean install -Pframework,examples,kubernetes -Dquarkus.platform.version="${{ matrix.quarkus-version }}" -Dts.global.container.registry-url=${{ secrets.CI_REGISTRY }} ${{ matrix.extra-maven-args }}
      - name: Zip Artifacts
        if: failure()
        run: |
          zip -R artifacts-k8s-jvm-${{ matrix.quarkus-version }}-${{ matrix.java }}.zip '*-reports/*'
      - name: Archive artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-k8s-jvm-${{ matrix.quarkus-version }}-${{ matrix.java }}
          path: artifacts-k8s-jvm-${{ matrix.quarkus-version }}-${{ matrix.java }}.zip
  kubernetes-build-native-latest:
    name: Kubernetes Native
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - quarkus-version: "999-SNAPSHOT"
            java: 21
          - quarkus-version: "999-SNAPSHOT"
            java: 17 # test 'quarkus-container-image-jib' with images based on UBI8 and Java 17
            extra-maven-args: '-pl examples/pingpong/ -Dtest-ubi8-compatibility -Dquarkus.jib.base-native-image=quay.io/quarkus/quarkus-micro-image:2.0 -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-17'
          - quarkus-version: "999-SNAPSHOT"
            java: 21 # test 'quarkus-container-image-jib' with images based on UBI8 and Java 21
            extra-maven-args: '-pl examples/pingpong/ -Dtest-ubi8-compatibility -Dquarkus.jib.base-native-image=quay.io/quarkus/quarkus-micro-image:2.0 -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-21'
    steps:
      - uses: actions/checkout@v4
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: 'maven'
      - name: Set up Minikube-Kubernetes
        uses: manusa/actions-setup-minikube@v2.14.0
        with:
          minikube version: 'v1.35.0'
          kubernetes version: 'v1.32.4'
          github token: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.CI_REGISTRY_USERNAME }}
          password: ${{ secrets.CI_REGISTRY_PASSWORD }}
      - name: Build
        run: |
          mvn -B --no-transfer-progress -fae -s .github/quarkus-snapshots-mvn-settings.xml clean install -Pframework,examples,native,kubernetes -Dquarkus.platform.version="${{ matrix.quarkus-version }}" -Dts.global.container.registry-url=${{ secrets.CI_REGISTRY }} ${{ matrix.extra-maven-args }}
      - name: Zip Artifacts
        if: failure()
        run: |
          zip -R artifacts-k8s-native-${{ matrix.quarkus-version }}-${{ matrix.java }}.zip '*-reports/*'
      - name: Archive artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-k8s-native-${{ matrix.quarkus-version }}-${{ matrix.java }}
          path: artifacts-k8s-native-${{ matrix.quarkus-version }}-${{ matrix.java }}.zip
